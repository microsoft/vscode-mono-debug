name: Extension CI

on:
  push:
    branches:
    - main
    tags:
    - 'v*'
  pull_request:
    branches:
    - main
  release:
    types:
    - published

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301

    - name: Install NPM packages
      run: npm install

    - name: Build VSIX
      run: make

    - name: Set VSIX name variable
      id: vsix_name
      run: echo "::set-output name=filename::$(ls mono-debug-*.vsix)"

    - name: Run tests
      uses: GabrielBB/xvfb-action@v1.4
      with:
        run: make run-tests

    - name: Upload CI VSIX
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: mono-debug-${{ github.sha }}.vsix
        path: ${{ steps.vsix_name.outputs.filename }}

    - name: Create Release
      if: success() && startsWith(github.ref, 'refs/tags/v')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release VSIX
      if: success() && startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.vsix_name.outputs.filename }}
        asset_name: ${{ steps.vsix_name.outputs.filename }}
        asset_content_type: application/zip

    - name: Publish to VS Marketplace
      if: success() && startsWith(github.ref, 'refs/tags/v')
      run: make publish
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
